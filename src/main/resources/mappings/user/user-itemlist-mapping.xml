<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ItemDAO">
	
	<resultMap type="com.thisisthat.user.item.vo.UserItemListVO" id="itemListVO">
		<result property="productCategory" column="product_category"/>
		<result property="productNo" column="product_no"/>
		<result property="uploadPath" column="upload_path"/>
		<result property="productName" column="product_name"/>
		<result property="productPrice" column="product_price"/>
		<result property="productStockTotal" column="product_stock_total"/>
	</resultMap>
	<resultMap type="com.thisisthat.user.item.vo.UserItemVO" id="itemInfoVO">
		<result property="productNo" column="product_no"/>
		<result property="productName" column="product_name"/>
		<result property="productPrice" column="product_price"/>
		<result property="materialInfo" column="material_info"/>
		<result property="origin" column="origin"/>
		<result property="xs" column="xs"/>
		<result property="s" column="s"/>
		<result property="m" column="m"/>
		<result property="l" column="l"/>
		<result property="xl" column="xl"/>
	</resultMap>
	<resultMap type="com.thisisthat.user.item.vo.UserItemImageVO" id="itemImageVO">
		<result property="productNo" column="product_no"/>
		<result property="uploadPath" column="upload_path"/>
		<result property="imageName" column="image_name"/>
		<result property="mainImage" column="main_image"/>
	</resultMap>
	<resultMap type="commentVO" id="commentResult">
		<id column="comment_no" property="commentNo"/>
		<result column="board_no" property="boardNo"/>
		<result column="comment_content" property="content"/>
		<result column="comment_writer" property="writer"/>
		<result column="reg_date" property="regDate"/>
		<result column="delete_date" property="deleteDate"/>
		<result column="parent_no" property="parentNo"/>
		<result column="comment_img" property="img" typeHandler="org.apache.ibatis.type.ArrayTypeHandler"/>
		
	</resultMap>
	
	<select id="getItemList" resultMap="itemListVO">
			select 
				pro.product_category as product_category, 
				pro.product_no as product_no,
				image.upload_path as upload_path,
				pro.product_name as product_name,
				pro.product_price as product_price,
				(select xs+s+m+l+xl as product_stock_total from product_stock where product_no = pro.product_no),
				cate.category_used
			from product_image as image, 
				product as pro left outer join category as cate on pro.product_category = cate.category_name
			where pro.product_no = image.product_no 
				and image.main_image = 1 
				and pro.product_used = 1
				and cate.category_used = 1
		<if test="!categoryName.equals('all') and !categoryName.equals('new')">
			and pro.product_category = #{categoryName}
		</if>
			order by pro.product_no desc
		<if test="categoryName.equals('new')">
			limit 12
		</if>
	</select>
	
	<select id="getItemInfo" resultMap="itemInfoVO">
		select * from 
		product as pro  join product_stock as stock on pro.product_no = stock.product_no
		where pro.product_no = #{productNo}
	</select>
	<select id="getItemImage" resultMap="itemImageVO">
		select * from product_image where product_no = #{productNo}
	</select>
	<select id="getItemSizeGuide" parameterType="Long" resultType="com.thisisthat.user.item.vo.UserItemSizeGuideVO">
		select * from size_guide where product_no = #{productNo}
	</select>
	<select id="getItemSizeUsed" parameterType="Long" resultType="com.thisisthat.user.item.vo.UserItemSizeUsedVO">
		select * from size_used where product_no = #{productNo}
	</select>
	<insert id="insertComment">
		INSERT INTO product_comment(
		board_no, comment_content, comment_writer, reg_date, comment_img)
		VALUES (#{boardNo}, #{content}, #{writer}, #{regDate}, #{img});
	</insert>
	
	<select id="commentCount" resultType="Integer">
		select count(*) from product_comment where delete_date is null and board_no =#{boardNo} 
	</select>
	<select id="getCommentList" resultMap="commentResult">
		select * from product_comment where delete_date is null and board_no =#{boardId} order by comment_no desc OFFSET #{start} limit #{cntPerPage}
	</select>
	<update id="delComment">
		update product_comment set delete_date = #{nowDate} where comment_no = #{commentNo}
	</update>
	
</mapper>
